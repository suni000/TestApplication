plugins {
    id 'com.android.application'
}
gradle.ext {
    pushVersion = '3.9.2'
    thirdPushVersion = '3.9.2'
}
android {
    namespace 'com.aliyun.emas.pocdemo'
    compileSdk 33

    defaultConfig {
        applicationId "com.aliyun.emas.pocdemo"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "PUSH_VERSION", "\"${gradle.pushVersion}\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("Test.jks")
            storePassword "test1234"
            keyAlias "test"
            keyPassword "test1234"
        }
        debugConfig {
            storeFile file("Test.jks")
            storePassword "test1234"
            keyAlias "test"
            keyPassword "test1234"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def formattedDate = new Date().format("yyyyMMdd_HHmm")
                outputFileName = "MyApp_${variant.versionName}_${formattedDate}_release.apk"
            }
        }
        if (variant.buildType.name == "debug") {
            variant.outputs.all { output ->
                def formattedDate = new Date().format("yyyyMMdd_HHmm")
                outputFileName = "MyApp_中文_${variant.versionName}_${formattedDate}_debug.apk"
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    buildFeatures {
//        viewBinding  true
//        dataBinding  true
//    }
    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10'
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation (name:'alicloud-android-push-3.9.3', ext: 'aar')
//    implementation (name:'alicloud-android-agoo-4.8.2-emas', ext: 'aar')
//    implementation (name:'alicloud-android-tool-1.1.0', ext: 'aar')
//    implementation (name:'accs_sdk_taobao-4.8.2-emas', ext: 'aar')
//    implementation (name:'aalicloud-android-error-1.1.0', ext: 'aar')
//    implementation (name:'accs_sdk_taobao-4.8.2-emas', ext: 'aar')
//    implementation (name:'accs_sdk_taobao-4.8.2-emas', ext: 'aar')
//    implementation (name:'accs_sdk_taobao-4.8.2-emas', ext: 'aar')

//    implementation "com.aliyun.ams:alicloud-android-push:${gradle.pushVersion}"
//    implementation 'com.google.code.gson:gson:2.8.6'
//
//    api "com.aliyun.ams:alicloud-android-third-push:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-meizu:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-vivo:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-oppo:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-xiaomi:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-huawei:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-honor:${gradle.thirdPushVersion}"
//    api "com.aliyun.ams:alicloud-android-third-push-fcm:${gradle.thirdPushVersion}"
//    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation 'androidx.appcompat:appcompat:1.6.1'
//    implementation 'com.google.android.material:material:1.9.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
////    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
//    implementation 'androidx.navigation:navigation-fragment:2.4.1'
//    implementation 'androidx.navigation:navigation-ui:2.4.1'
//    implementation 'androidx.media3:media3-common:1.5.1'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation("androidx.viewpager2:viewpager2:1.0.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }

    implementation "com.aliyun.ams:alicloud-android-push:${gradle.pushVersion}"
    implementation 'com.google.code.gson:gson:2.8.6'

    api "com.aliyun.ams:alicloud-android-third-push:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-meizu:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-vivo:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-oppo:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-xiaomi:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-huawei:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-honor:${gradle.thirdPushVersion}"
    api "com.aliyun.ams:alicloud-android-third-push-fcm:${gradle.thirdPushVersion}"


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
//task assembleDebugKuoError {
//    group = "build"
//    description = "Custom task to assemble Debug build and rename the output APK"
//
//    doLast {
//        println "Running custom assembleDebugKuo task..."
//
//        // 获取 Debug 变体的输出文件
//        android.applicationVariants.all { variant ->
//            if (variant.buildType.name == "debug") {
////                variant.outputs.all { output ->
//////                    def originalFile = output.outputFile
//////                    def newFileName = "MyApp_Debug_Custom_${new Date().format('yyyyMMdd_HHmm')}.apk"
//////                    output.outputFileName = new File(originalFile.parent, newFileName)
////                }
//                variant.outputs.all { output ->
//                    def formattedDate = new Date().format("yyyyMMdd_HHmm")
//                    output.outputFileName = "MyApp_中文_${variant.versionName}_${formattedDate}_debug.apk"
//                }
//            }
//        }
//    }
//}
task assembleDebugKuo {
    group = "build"
    description = "Custom task to assemble Debug build and move the output APK"

    doLast {
        println "Running custom assembleDebugKuo task..."

        android.applicationVariants.all { variant ->
            if (variant.buildType.name == "debug") {
                variant.outputs.all { output ->
                    // 获取默认生成的 APK 文件
                    def originalFile = output.outputFile
                    def formattedDate = new Date().format("yyyyMMdd_HHmm")
                    def newFileName = "MyApp_Debug_中文()_${variant.versionName}_${formattedDate}.apk"

                    // 移动文件到自定义目录
                    def targetDir = file("${project.rootDir}/customOutput/")
                    if (!targetDir.exists()) {
                        targetDir.mkdirs()
                    }
                    def targetFile = new File(targetDir, newFileName)
                    if (originalFile.renameTo(targetFile)) {
                        println "Moved APK to: ${targetFile.absolutePath}"
                    } else {
                        println "Failed to move APK!"
                    }
                }
            }
        }
    }
}
// 让自定义任务依赖于 assembleDebug
assembleDebugKuo.dependsOn 'assembleDebug'